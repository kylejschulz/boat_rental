class Dock
  attr_reader :name, :max_rental_time
  def initialize(name, max_rental_time)
    @name = name
    @max_rental_time = max_rental_time
    @rental_log = Hash.new

  end

  def rent(boat, renter)
    @rental_log[boat] = renter
  end

  def rental_log
    @rental_log
  end

  def charge(boat)
    hash = Hash.new
    hash[:card_number] = rental_log[boat].credit_card_number
    cost = if boat.hours_rented > max_rental_time
      max_rental_time * boat.price_per_hour
    else
      boat.price_per_hour * boat.hours_rented
    end
    hash[:amount] = cost

    hash
  end

  def return(boat)
    #`return` - This method takes a `Boat` object as an argument.
    # When this method is called, it signifies that a boat has been
    # returned and is no longer being rented.

  end

  def log_hour
    #* `log_hour` - This method takes no arguments. When it is
    #called, all boats that are currently rented have been rented an
    #additional hour.
  end

  def revenue
    # * `revenue` - This method takes no arguments. It returns the total
    # revenue generated by charging all boats that have been rented and
    # returned. A charge for a boat follows the same rules as iteration 3.
end
